package org.citruscircuits.vision.detectors;

import java.util.ArrayList;

import org.opencv.core.Mat;
import org.opencv.core.MatOfPoint;
import org.opencv.core.Rect;
import org.opencv.core.Scalar;
import org.opencv.imgproc.Imgproc;

public class ContourDetector extends ObjectDetector {
	public Rect getBoundingBox(Mat source)
	{
		Rect retval = new Rect(0, 0, 0, 0);
		
		// Find contours
		ArrayList<MatOfPoint> contours = new ArrayList<MatOfPoint>();
        Mat hierarchy = new Mat();
        Imgproc.findContours(source.clone(), contours, hierarchy, Imgproc.RETR_LIST, Imgproc.CHAIN_APPROX_NONE);
		
        // Find biggest bounding box
        float largestArea = 0;
        for (int i = 0; i < contours.size(); i++) 
        {
        	if(Imgproc.contourArea(contours.get(i)) > largestArea)
        	{
        		retval = Imgproc.boundingRect(contours.get(i));
        	}
        }
        
		return retval;
	}
	@Override
	public Rect findTarget(Mat source) {
		// TODO Auto-generated method stub
		return getBoundingBox(source);
	}

}
